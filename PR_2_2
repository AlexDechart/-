#include <iostream>
using namespace std;
class circle {
private:
    float radius, x_center, y_center;
    float pi = 3.14;
public:
    circle(float r, float x, float y) {
        radius = r;
        x_center = x;
        y_center = y;
    };
    void set_circle(float r, float x, float y)
    {
        radius = r;
        x_center = x;
        y_center = y;
    };
    float square()
    {
        return pi * radius * radius;
    }
    bool triangle_around(float a, float b, float c) {
        double minip = (a + b + c) * 0.5;
        double s = sqrt(minip * (minip - a) * (minip - b) * (minip - c));
        return (radius >= ((a + b + c) / (4 * s)));
    }
    bool triangle_in(float a, float b, float c) {
        double minip = (a + b + c) * 0.5;
        double s = sqrt(minip * (minip - a) * (minip - b) * (minip - c));
        return (radius <= s / minip);
    }
    bool check_circle(float r, float x_cntr, float y_cntr) {
        float rad2 = sqrt(pow((x_cntr - x_center), 2) + pow((y_cntr - y_center), 2));
        return (radius + r <= rad2);
    }
    void show() {
        cout << "Радиус: " << radius << endl;
        cout << "Х круга: " << x_center << endl;
        cout << "Y круга: " << y_center << endl;
    }
};
int main() {
    setlocale(LC_ALL, "Russian");
    circle circles[3]{
        circle(0, 0, 0),
        circle(0, 0, 0),
        circle(0, 0, 0)
    };
    float a, b, c;
    float r, x_center, y_center;
    for (int i = 0; i < 3; i++) {
        cout << "радиус, центр X, центр Y для окружности " << i + 1 << endl;
        cin >> r >> x_center >> y_center;
        circles[i].set_circle(r, x_center, y_center);
    }
    for (int i = 0; i < 3; i++) {
        circles[i].show();
        cout << "площадь круга: " << circles[i].square() << endl;
        cout << "стороны треугольника" << i + 1 << endl;
        cin >> a >> b >> c;
        cout << "треугольник внутри? - " << circles[i].triangle_in(a, b, c) << endl;
        cout << "треугольник снаружи? - " << circles[i].triangle_around(a, b, c) << endl;
        float r2, x2, y2;
        cout << "данные круга (проверка на пересечение с (r, xc, yc):" << endl;
        cin >> r2 >> x2 >> y2;
        cout << "круги пересекаются? - " << circles[i].check_circle(r2, x2, y2) << endl;
    }

}
